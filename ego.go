// Generated by ego.
// DO NOT EDIT

package main

import (
	"fmt"
	"github.com/tkrajina/gpxgo/gpx"
	"html"
	"io"
)

var _ = fmt.Sprint("") // just so that we can keep the fmt import for now
//line map.ego:1
func (m *Map) RenderPolylines(w io.Writer, t *Track) error {
//line map.ego:2
	_, _ = io.WriteString(w, "\n<svg width=\"")
//line map.ego:2
	_, _ = io.WriteString(w, html.EscapeString(fmt.Sprint(m.w)))
//line map.ego:2
	_, _ = io.WriteString(w, "\" height=\"")
//line map.ego:2
	_, _ = io.WriteString(w, html.EscapeString(fmt.Sprint(m.h)))
//line map.ego:2
	_, _ = io.WriteString(w, "\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <style type=\"text/css\" >\n        <![CDATA[\n            .segment { fill: none; stroke: blue; stroke-width: 3 }\n            .segment:hover { stroke: red }\n        ]]>\n    </style>\n    ")
//line map.ego:9
	for i := range t.Segments {
//line map.ego:10
		_, _ = io.WriteString(w, "\n    <polyline class=\"segment\" points=\"")
//line map.ego:10
		_, _ = io.WriteString(w, html.EscapeString(fmt.Sprint(m.PolylinePoints(t.Segment(i)))))
//line map.ego:10
		_, _ = io.WriteString(w, "\"/>\n\t")
//line map.ego:11
	}
//line map.ego:12
	_, _ = io.WriteString(w, "\n</svg>\n")
	return nil
}

//line map2.ego:1
func (m *Map) RenderLines(w io.Writer, t *Track) error {
//line map2.ego:2
	_, _ = io.WriteString(w, "\n")
//line map2.ego:3
	_, _ = io.WriteString(w, "\n")
//line map2.ego:4
	_, _ = io.WriteString(w, "\n<svg width=\"")
//line map2.ego:4
	_, _ = io.WriteString(w, html.EscapeString(fmt.Sprint(m.w)))
//line map2.ego:4
	_, _ = io.WriteString(w, "\" height=\"")
//line map2.ego:4
	_, _ = io.WriteString(w, html.EscapeString(fmt.Sprint(m.h)))
//line map2.ego:4
	_, _ = io.WriteString(w, "\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <style type=\"text/css\" >\n        <![CDATA[\n            .segment { fill: none; stroke-width: 4 }\n            .segment:hover { stroke-width: 8 }\n        ]]>\n    </style>\n    <g id=\"legend\">")
//line map2.ego:11
	for i := range palette {
//line map2.ego:12
		_, _ = io.WriteString(w, "\n        <rect x=\"")
//line map2.ego:12
		_, _ = io.WriteString(w, html.EscapeString(fmt.Sprint(30*i)))
//line map2.ego:12
		_, _ = io.WriteString(w, "\" y=\"0\" width=\"30\" height=\"20\" fill=\"")
//line map2.ego:12
		_, _ = io.WriteString(w, html.EscapeString(fmt.Sprint(fmt.Sprintf("#%03x", palette[i]))))
//line map2.ego:12
		_, _ = io.WriteString(w, "\"/>\n        ")
//line map2.ego:13
		if i%5 == 0 {
//line map2.ego:14
			_, _ = io.WriteString(w, "\n        <text x=\"")
//line map2.ego:14
			_, _ = io.WriteString(w, html.EscapeString(fmt.Sprint(30*i+5)))
//line map2.ego:14
			_, _ = io.WriteString(w, "\" y=\"16\" fill=\"white\">")
//line map2.ego:14
			_, _ = io.WriteString(w, html.EscapeString(fmt.Sprint(fmt.Sprint(i))))
//line map2.ego:14
			_, _ = io.WriteString(w, "kts</text>\n        ")
//line map2.ego:15
		}
//line map2.ego:16
		_, _ = io.WriteString(w, "\n        <rect x=\"")
//line map2.ego:16
		_, _ = io.WriteString(w, html.EscapeString(fmt.Sprint(30*i)))
//line map2.ego:16
		_, _ = io.WriteString(w, "\" y=\"")
//line map2.ego:16
		_, _ = io.WriteString(w, html.EscapeString(fmt.Sprint(m.h-20)))
//line map2.ego:16
		_, _ = io.WriteString(w, "\" width=\"30\" height=\"20\" fill=\"")
//line map2.ego:16
		_, _ = io.WriteString(w, html.EscapeString(fmt.Sprint(fmt.Sprintf("#%03x", palette[i]))))
//line map2.ego:16
		_, _ = io.WriteString(w, "\"/>\n        ")
//line map2.ego:17
		if i%5 == 0 {
//line map2.ego:18
			_, _ = io.WriteString(w, "\n        <text x=\"")
//line map2.ego:18
			_, _ = io.WriteString(w, html.EscapeString(fmt.Sprint(30*i+5)))
//line map2.ego:18
			_, _ = io.WriteString(w, "\" y=\"")
//line map2.ego:18
			_, _ = io.WriteString(w, html.EscapeString(fmt.Sprint(m.h-4)))
//line map2.ego:18
			_, _ = io.WriteString(w, "\" fill=\"white\">")
//line map2.ego:18
			_, _ = io.WriteString(w, html.EscapeString(fmt.Sprint(fmt.Sprint(i))))
//line map2.ego:18
			_, _ = io.WriteString(w, "kts</text>")
//line map2.ego:18
		}
//line map2.ego:19
		_, _ = io.WriteString(w, "\n        ")
//line map2.ego:19
	}
//line map2.ego:20
	_, _ = io.WriteString(w, "\n    </g>\n    ")
//line map2.ego:21
	for i := range t.Segments {
//line map2.ego:22
		_, _ = io.WriteString(w, "\n    <g class=\"segment\">\n        ")
//line map2.ego:23
		t.Segment(i).EachPair(func(prev, next *gpx.GPXPoint) {
//line map2.ego:24
			_, _ = io.WriteString(w, "\n        ")
//line map2.ego:24
			x1, y1 := m.Point(prev)
			x2, y2 := m.Point(next)
			c := m.SpeedColor(prev, next)
//line map2.ego:25
			_, _ = io.WriteString(w, "\n        <!-- ")
//line map2.ego:25
			_, _ = io.WriteString(w, html.EscapeString(fmt.Sprint(m.Distance(prev, next, nm))))
//line map2.ego:25
			_, _ = io.WriteString(w, " nm; ")
//line map2.ego:25
			_, _ = io.WriteString(w, html.EscapeString(fmt.Sprint(m.Speed(prev, next, nm))))
//line map2.ego:25
			_, _ = io.WriteString(w, " kts -->\n        <line class=\"step\" x1=\"")
//line map2.ego:26
			_, _ = io.WriteString(w, html.EscapeString(fmt.Sprint(x1)))
//line map2.ego:26
			_, _ = io.WriteString(w, "\" y1=\"")
//line map2.ego:26
			_, _ = io.WriteString(w, html.EscapeString(fmt.Sprint(y1)))
//line map2.ego:26
			_, _ = io.WriteString(w, "\" x2=\"")
//line map2.ego:26
			_, _ = io.WriteString(w, html.EscapeString(fmt.Sprint(x2)))
//line map2.ego:26
			_, _ = io.WriteString(w, "\" y2=\"")
//line map2.ego:26
			_, _ = io.WriteString(w, html.EscapeString(fmt.Sprint(y2)))
//line map2.ego:26
			_, _ = io.WriteString(w, "\" stroke=\"")
//line map2.ego:26
			_, _ = io.WriteString(w, html.EscapeString(fmt.Sprint(c)))
//line map2.ego:26
			_, _ = io.WriteString(w, "\"/>\n\t    ")
//line map2.ego:27
		})
//line map2.ego:28
		_, _ = io.WriteString(w, "\n    </g>\n\t")
//line map2.ego:29
	}
//line map2.ego:30
	_, _ = io.WriteString(w, "\n</svg>\n")
	return nil
}
