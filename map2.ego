<%
package main
import "fmt"
import "time"

func (m *Map) renderLines(w io.Writer, t *Track) {
%>
<svg version="1.1" xmlns="http://www.w3.org/2000/svg"
    width="<%= m.w %>" height="<%= m.h %>" viewBox="0 0 <%= m.w %> <%= m.h %>">
    <style type="text/css" >
        <![CDATA[
            .segment { fill: none; stroke-width: 4 }
            .segment:hover { stroke-width: 8 }
        ]]>
    </style>
    <g id="legend">
        <% for i := range palette { %>
        <rect x="<%= 30*i %>" y="0" width="30" height="20" fill="<%= fmt.Sprintf("#%03x",palette[i]) %>"/>
        <rect x="<%= 30*i %>" y="<%= m.h-20 %>" width="30" height="20" fill="<%= fmt.Sprintf("#%03x",palette[i]) %>"/>
        <% } %>
        <% for i := 0; i < len(palette); i += 5 { %>
        <text x="<%= 30*i+5 %>" y="16" fill="white"><%= fmt.Sprint(i) %>kts</text>
        <text x="<%= 30*i+5 %>" y="<%= m.h-4 %>" fill="white"><%= fmt.Sprint(i) %>kts</text>
        <% } %>
    </g>
    <%  totalDistance := float64(0)
        var lastPoint *Point
        for _, segment := range t.Segments {
    %>
    <g class="segment">
        <% if lastPoint != nil {
            prev, next := lastPoint, segment.Points[0]
            x1, y1 := m.Point(prev.gpx)
            x2, y2 := m.Point(next.gpx)
            c := m.SpeedColor(next.Speed)
            totalDistance += next.Distance
            timestamp := next.gpx.Timestamp.In(t.Timezone()).Format(time.TimeOnly)
        %>
        <line class="step" x1="<%= x1 %>" y1="<%= y1 %>" x2="<%= x2 %>" y2="<%= y2 %>" stroke="<%= c %>">
        <title><%= timestamp %>: <%= next.ShortString() %> = <%= fmt.Sprintf("%0.2f nm", totalDistance) %>
<%= segment.String() %>
<%= segment.Type.String() %></title>
        </line>
        <% } %>
        <% segment.EachPair(func(prev, next *Point) {
            lastPoint = next
            x1, y1 := m.Point(prev.gpx)
            x2, y2 := m.Point(next.gpx)
            c := m.SpeedColor(next.Speed)
            totalDistance += next.Distance
            timestamp := next.gpx.Timestamp.In(t.Timezone()).Format(time.TimeOnly)
        %>
        <line class="step" x1="<%= x1 %>" y1="<%= y1 %>" x2="<%= x2 %>" y2="<%= y2 %>" stroke="<%= c %>">
        <title><%= timestamp %>: <%= next.ShortString() %> = <%= fmt.Sprintf("%0.2f nm", totalDistance/1852) %>
<%= segment.ShortString() %>
<%= segment.Type.String() %></title>
        </line>
	    <% }) %>
    </g>
	<% } %>
</svg>
<% } %>